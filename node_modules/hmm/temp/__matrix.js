'use stirct';

var Matrix = function(matrixDefinition) {
  var matrixValues = this.matrixValues = matrixDefinition;

  this._checkDefinition();

  this.numberOfRows = matrixValues.length;
  this.numberOfColumns = matrixValues[0].length;
};

Matrix.prototype.matrixValues = null;
Matrix.prototype.numberOfRows = 0;
Matrix.prototype.numberOfColumns = 0;

Matrix.prototype._checkDefinition = function() {
  if (!Array.isArray(this.matrixValues)) {
    throw new Error('Matrix: input is not an array.');
  }

  var numberOfColumns = matrixValues[0].length;

  this.matrixValues.forEach(function(rowMatrix, i) {
    if (!Array.isArray(rowMatrix)) {
      throw new Error('Matrix: row matrix ' + i + ' is not an array.');
    }

    if (rowMatrix.length !== numberOfColumns) {
      throw new Error('Matrix: ' +
        'Length of row matrix ' + i + ' mismatch.');
    }

    rowMatrix.forEach(function(num, j) {
      if (typeof num !== 'number') {
        throw new Error('Matrix: ' +
          'Element ' + i + ',' + j + ' is not a number.');
      }
    }, this);
  }, this);
};

Matrix.prototype._checkRow

var SquareMatrix = function(matrixDefinition) {
  Matrix.apply(this, arguments);
  this._checkDefinition();

  this.length = this.numberOfRows;
};

SquareMatrix.prototype = Object.create(Matrix);

SquareMatrix.prototype.length = 0;

SquareMatrix.prototype._checkDefinition = function() {
  if (this.numberOfRows !== this.numberOfColumns) {
      throw new Error('SquareMatrix: ' +
        'Square matrix should have the same number of rows and columns.');
  }
};

